; ModuleID = 'Expressio'
source_filename = "Expressio"

@fmt = private unnamed_addr constant [4 x i8] c"%d\0A\00"
@fmt.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00"

declare i32 @printf(i8*, ...)

declare i32 @printr({ i8, i8, i8*, i8* }*)

declare i1 @matches(i8*, { i8, i8, i8*, i8* }*)

declare i32 @printdfa({ i32, i8*, i32, i32, i32*, i32, i32* }*)

define i32 @main() {
entry:
  %a = alloca i32
  %b = alloca i32
  store i32 3, i32* %a
  store i32 4, i32* %b
  br label %while

while:                                            ; preds = %int_bb, %entry
  %b1 = load i32, i32* %b
  %a2 = load i32, i32* %a
  %tmp = icmp slt i32 %a2, %b1
  br i1 %tmp, label %while_body, label %merge

int_bb:                                           ; preds = %while_body
  br label %while

while_body:                                       ; preds = %while
  store i32 4, i32* %a
  br label %int_bb

merge:                                            ; preds = %while
  ret i32 0
}
