February 2 2018:

- Need to finish proposal
	- build a language that focuses on general DFA/NFA and offers the functionality to build regular expressions
	- set operations can be used on both general FSM's and regular expressions
	- sentence segmentation 

Tools for user: highest precedence decomposition, maybe D()
Ex: 
	x = a
	x2 = x* //basically a*
	D(x2) = [* , a]

Ex:
	alphabet = {a,b,c,d}
	RegX x1 = ( (a b) | c)*
	D(x1) = [*, (a b) | c]

	D((a b) | c) = [| , (a b), c]
	.
	.
	.

Example of Implementation of HPD (highest precedence order):

breakdown RegExp -> (RegExp, Optional, RegExp, Operator)
	| breakdown (r)** -> (r,None, **)
	| breakdwon (r1 ^ r2) -> (r1,some(r2),^)


